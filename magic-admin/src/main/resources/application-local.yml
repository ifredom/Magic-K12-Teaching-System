server:
    port: 9300

#################### druid 数据源配置 ####################
spring:
    datasource:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        druid:
            # 主库数据源：
            master:
                url: jdbc:mysql://localhost:3306/magick12?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
                username: root
                password: magictang
            # 从库数据源
            slave:
                # 从数据源开关/默认关闭
                enabled: false
                url:
                username:
                password:
            initial-size: 10   # 初始化大小。默认值为0。
            min-idle: 5     # 最小空闲连接个数。默认值为2。
            max-active: 20    # 最大连接个数。默认值为8。
            max-wait: 60000   # 配置获取连接等待超时的时间
            pool-prepared-statements: true  # 打开PSCache，并且指定每个连接上PSCache的大小
            max-pool-prepared-statement-per-connection-size: 20
            time-between-eviction-runs-millis: 60000    # 配置间隔多久才进行一次监测，监测需要关闭的空闲连接，单位时毫秒
            min-evictable-idle-time-millis: 60000       # 配置一个连接在池中最小生存的时间

            #      validation-query: SELECT 1
            test-while-idle: true            # 建议配置为true，不影响性能，并且保证安全性。如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
            test-on-borrow: false            # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
            test-on-return: false            # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能

            # 启用Druid内置的Filter，会使用默认的配置。可自定义配置，见下方的各个filter节点。
            filters: stat,wall

            # StatViewServlet监控器。开启后，访问http://域名/druid/login.html
            stat-view-servlet:
                enabled: true # 开启 StatViewServlet，即开启监控功能
                login-username: magictang # 访问监控页面时登录的账号
                login-password: 123456 # 密码
                url-pattern: /druid/* # Servlet的映射地址，不填写默认为"/druid/*"。如填写其它地址，访问监控页面时，要使用相应的地址
                reset-enable: false # 是否允许重置数据（在页面的重置按钮）。（停用后，依然会有重置按钮，但重置后不会真的重置数据）
                allow: 127.0.0.1 # 监控页面访问白名单。默认为127.0.0.1。与黑名单一样，支持子网掩码，如128.242.127.1/24。多个ip用英文逗号分隔
                deny: 22.1.2.3 # 监控页面访问黑名单

            # 配置 WebStatFilter（StatFilter监控器中的Web模板）
            web-stat-filter:
                enabled: true # 开启 WebStatFilter，即开启监控功能中的 Web 监控功能
                url-pattern: /* # 映射地址，即统计指定地址的web请求
                exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*' # 不统计的web请求，如下是不统计静态资源及druid监控页面本身的请求
                session-stat-enable: true # 是否启用session统计
                session-stat-max-count: 1 # session统计的最大个数，默认是1000。当统计超过这个数，只统计最新的
                principal-session-name: userName # 所存用户信息的serssion参数名。Druid会依照此参数名读取相应session对应的用户名记录下来（在监控页面可看到）。如果指定参数不是基础数据类型，将会自动调用相应参数对象的toString方法来取值
                principal-cookie-name: userName # 与上类似，但这是通过Cookie名取到用户信息
                profile-enable: true # 监控单个url调用的sql列表（试了没生效，以后需要用再研究）

            # 配置 Druid SpringAOP 监控
            filter:
                stat:
                    log-slow-sql: false
                    slow-sql-millis: 1000
                    merge-sql: false
                wall:
                    config:
                        multi-statement-allow: true

